= MagLev and MySQL

Since MagLev does not support Ruby C-extensions, the normal mysql gem will
not work with MagLev.  The pure ruby MySQL gem will work, at least since
version 2.9.2.  Install the ruby-mysql gem:

  $ maglev-gem install ruby-mysql --version '>= 2.9.2'

and then put the following in your code

  gem 'ruby-mysql', '>= 2.9.2'
  require 'mysql'

You also need to run MagLev with the <tt>-MallIvsDynamic</tt> flag anytime
you use the ruby-mysql gem.

== Configure the demo code

MySQL must already be running, then edit the configuration section of
<code>mysql.rb</code> to reflect your setup:

  # CONFIGURATION
  host = 'localhost'
  user = 'ruby'
  pass = 'ruby'

If you get errors trying to connect to <tt>/tmp/mysql.sock</tt>, you may
need to tell the driver where the mysqld UNIX domain socket is.  The
+MYSQL_UNIX_PORT+ environment variable controls this, e.g.,

  $ export MYSQL_UNIX_PORT='/opt/local/var/run/mysql5/mysqld.sock'
  $ rake

== Run

To run, just use rake:

  $ rake
  (in /Users/pmclain/GemStone/checkouts/git/examples/mysql)
  maglev-ruby mysql.rb
  Created database
  Database test_db selected
  Table created
  Rows inserted
  Select complete
  Update complete
  Tabled dropped
  Database test_db dropped
  Connection closed

== Deprecated

MagLev ships with a copy of the pure ruby MySQL driver in the
<code>lib/ruby/site_ruby/1.8/ruby-mysql</code> directory.  This version is
now deprecated.  Please use the rubygems version cited above.

With the deprecated version, if you are running MySQL5, you may have
problems with old style authentication.  For workarounds, see the
{MySQL Documentation}[http://dev.mysql.com/doc/refman/5.1/en/old-client.html].
