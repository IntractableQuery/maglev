== License

Please see LICENSES.txt[link:files/LICENSES_txt.html] in this directory.

== Getting started

The simplest way to install and run MagLev is to use the
installer[http://maglev-discussion.googlegroups.com/web/MagLev-installer.zip]
available from the
{MagLev Discussion Google Group}[http://groups.google.com/group/maglev-discussion/].
This installer/updater creates a separate (sub)directory for each new version of MagLev.

If you want to participate in MagLev development, or just live on the
bleeding edge, you can clone the MagLev github repository, i.e. `git
clone git://github.com/MagLev/maglev.git` To use it, you need to run
install.sh at least once. After that, everytime you do a 'git pull' you
need to run update.sh to ensure you have the corresponding GemStone 3.x
binaries. Otherwise, you might get version skew that prevents MagLev
from running correctly.  You'll have all the functionality of git,
but unless you create a new clone for each release, you may be unable
to revert to an earlier version.

== Prerequisites

Some prerequisites must be installed on your machine before MagLev can
run correctly. For details, see the Prerequisites[link:files/docs/prerequisites.html] file in the docs directory.

== Documentation

To generate the HTML version of this and other documentation:

cd to the directory holding this README
  $ rake rdoc
open html/index.html in your web browser of choice

== Quick Start
=== Install MagLev

Once you've downloaded MagLev by running
<tt>installMaglev.sh</tt> or <tt>upgradeMaglev.sh</tt>,
set your <tt>MAGLEV_HOME</tt> and <tt>PATH</tt> variables:

  export MAGLEV_HOME=<path_to_the_directory_containing_this_README>
  export PATH=$MAGLEV_HOME/bin:$PATH

It can also be useful to put any frequently used MagLev options (like "-d" or "-MtraceLoad")
in the environment variable MAGLEV_OPTS so you don't have to type them on the command line,
and executables like rackup, rake, etc. can use them without modifying those scripts.

  export MAGLEV_OPTS="-d -MtraceLoad"

run "maglev-ruby --help" to see possible options.

=== Start the MagLev server

The server is started with rake:

     $ cd $MAGLEV_HOME
     $ rake maglev:start

=== Check status of MagLev server

To check that the MagLev Server started correctly,
run <tt>rake maglev:status</tt>, or simply, <tt>rake</tt>:

  $ cd $MAGLEV_HOME
  $ rake maglev:status

If the server is not running, you'll see output like:

  (in /congo1/users/monty/MagLev/MagLev-22152.Linux)
  maglev not running

If a server is running, you'll see output like:

  (in /congo1/users/monty/MagLev/MagLev-22152.Linux)
  Status  Version    Owner    Pid   Port   Started     Type  Name
  ------ --------- --------- ----- ----- ------------ ------ ----
    OK   3.0.0     monty     26354 33413 Aug 19 11:32 Stone  maglev

=== <tt>maglev-ruby</tt>: Execute a Ruby file

You should now be able to run a simple ruby script:

  $ cat > hello.rb
  puts "Hello from MagLev"
  ^D
  $ maglev-ruby hello.rb
  Hello from MagLev
  $

=== <tt>maglev-irb</tt>: Open an interactive maglev shell

MagLev now includes a slightly modified copy of irb called maglev-irb.

  $ maglev-irb
  >> 1 + 1
  => 2
  *> puts "Hi"
  Hi
  => nil
  *> ^D
  $

Using <tt>Maglev.commit_transaction</tt> in maglev-irb is not supported.

If you get an error when starting maglev-irb, it's likely
something in your .irbrc is breaking maglev-irb. Try
<tt>maglev-irb -f</tt> which will bypass loading your .irbrc.

== Next Steps

=== Examples

You can try running the scripts in the
+examples+[link:files/examples/README_rdoc.html] directory.

==== Webrick
A simple example that starts a webrick server which you can connect
to at http://localhost:2000/.  To run the script, make sure
<tt>maglev-ruby</tt> is on your path, and then:

  $ $MAGLEV_HOME/examples/webrick/time_server.rb

^C will terminate the webrick server VM.

== Further reading

The following documentation explains more:

{Release Notes}[link:files/docs/release_notes.html]::  Notes on and limitations of the current release.
Server[link:files/docs/maglev-server.html]::  How to start and stop the MagLev server.
Debug[link:files/docs/debugging.html]::      How to run MagLev in debug mode
Layout[link:files/docs/file_layout.html]::   Guide to the MagLev distribution file layout
Specs[link:files/docs/rubyspecs.html]::      Running +mspec+ and +rubyspecs+ with MagLev
Rake[link:files/docs/rake.html]::            Rake tasks for MagLev
{<tt>maglev-irb</tt>}[link:files/docs/maglev-irb.html]:: MagLev interactive utility
Troubleshooting[link:files/docs/troubleshooting.html]:: Solutions for common problems
Prerequisites[link:files/docs/prerequisites.html]:: External software needed by MagLev
{Persistence API}[link:files/docs/persistence-api.html]:: Persistence and transactions
{Smalltalk FFI}[link:files/docs/smalltalk_ffi.html]:: GemStone Smalltalk FFI
{MySQL Driver}[link:files/docs/mysql_driver.html]:: MySQL driver
Benchmarks[link:files/docs/benchmarks.html]:: Ruby Benchmark Suite benchmarks
Applications[link:files/docs/applications.html]:: Sample Ruby apps we're testing in MagLev

== Hints:
* set <tt>MAGLEV_HOME</tt> to the full path of this directory, and add
  <tt>$MAGLEV_HOME/bin</tt> to your <tt>PATH</tt>. Then you can use
  <tt>maglev-ruby</tt> etc. from anywhere.

== Ruby code:
* <tt>src/</tt> and <tt>src/lib/</tt> are both on the require path
* <tt>src/kernel/</tt> has the core +Array+, +String+ etc. files

